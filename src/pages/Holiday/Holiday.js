import classNames from 'classnames/bind';
import styles from './Holiday.module.scss';

import { useEffect, useState } from 'react';
import $ from 'jquery';

import ControlHoliday from './ControlHoliday';
import * as HolidayService from '~/services/HolidayService';
import Pagination from '~/components/Pagination';
import images from '~/assets/images';
import Image from '~/components/Image';

const cx = classNames.bind(styles);

function Holiday() {
    const [day, setDay] = useState('');
    const [month, setMonth] = useState('');
    const [year, setYear] = useState('');
    const [updateDay, setUpdateDay] = useState('');
    const [updateMonth, setUpdateMonth] = useState('');
    const [updateYear, setUpdateYear] = useState('');
    const [allDay, setAllDay] = useState([]);
    const [checkClick, setCheckClick] = useState(false);
    const [checkDelete, setCheckDelete] = useState(false);
    const [dataItem, setDataItem] = useState('');
    const [resetDay, setResetDay] = useState(false);
    const [checkSub, setCheckSub] = useState(false);
    const [checkExists, setCheckExists] = useState(false);
    const [checkBtn, setCheckBtn] = useState(0);
    const [totalPage, setTotalPage] = useState(0);
    const [page, setPage] = useState(1);
    const [viewEdit, setViewEdit] = useState(false);

    const handleNoneEdit = () => {
        const boxEdit = $('.box-input-edit');
        boxEdit.css({
            display: 'none',
        });
        setCheckBtn(0);
    };

    const handleTextEdit = () => {
        $('.btn-edit').css({
            'background-color': 'var(--color-theme)',
        });

        $('.text-edit').css({
            color: 'var(--color-content-box)',
        });

        $('.svg-edit').css({
            fill: 'var(--color-content-box)',
        });
    };

    const handleDay = (day, month, year) => {
        if (day !== '' && month !== '' && year !== '') {
            let newDay = '';
            if (1 <= Number(day) && Number(day) <= 9) {
                newDay += '0' + day + '/';
            } else {
                newDay += day + '/';
            }
            if (1 <= Number(month) && Number(month) <= 9) {
                newDay += '0' + month + '/';
            } else {
                newDay += month + '/';
            }
            newDay += year;
            return newDay;
        }
    };

    useEffect(() => {
        if (checkClick && day !== '' && month !== '' && year !== '') {
            const newDay = handleDay(day, month, year);
            HolidayService.post({ day: newDay }).catch((err) => {
                return err;
            });
            setCheckClick(false);
            setResetDay(true);
        }

        if (checkDelete) {
            HolidayService.destroy({ data: dataItem }).catch((err) => {
                return err;
            });
            setCheckDelete(false);
        }

        if (checkSub && updateDay !== '' && updateMonth !== '' && updateYear !== '') {
            HolidayService.put({ data: dataItem })
                .then((res) => {
                    if (!res.success) {
                        setCheckExists(true);
                    }
                })
                .catch((err) => {
                    return err;
                });
            setCheckSub(false);
            setResetDay(true);
        }

        HolidayService.get()
            .then((res) => {
                if (res.length !== 0) {
                    setAllDay(res.data.slice((page - 1) * 10, page * 10));
                    setTotalPage(res.total_page);
                }
            })
            .catch((err) => {
                return err;
            });

        if (checkBtn !== 0) {
            handleTextEdit();
            $(`#btn-edit-${checkBtn}`).css({
                'background-color': 'var(--color-content-box)',
            });

            $(`#text-edit-${checkBtn}`).css({
                color: 'var(--color-theme)',
            });

            $(`.svg-edit-${checkBtn}`).css({
                fill: 'var(--color-theme)',
            });
        } else {
            handleTextEdit();
        }
    }, [
        day,
        month,
        year,
        checkClick,
        checkDelete,
        dataItem,
        checkSub,
        updateDay,
        updateMonth,
        updateYear,
        checkBtn,
        page,
    ]);

    return (
        <div className={cx('wrapper')}>
            <div className={cx('title-box')}>
                <p>Holiday</p>
            </div>
            <div className={cx('inner-box')}>
                {checkExists ? (
                    <div className={cx('box-notice')}>
                        <div className={cx('content-notice')}>
                            <div className={cx('label')}>
                                <span className={cx('text')}>{dataItem.day} already exist.</span>
                            </div>
                            <div
                                className={cx('btn-confirm', 'btn-holiday')}
                                onClick={() => {
                                    setCheckExists(false);
                                    setCheckBtn(0);
                                }}
                            >
                                <div className={cx('content')}>
                                    <span className={cx('text')}>Confirm</span>
                                </div>
                            </div>
                        </div>
                    </div>
                ) : undefined}
                <div className={cx('control-holiday')}>
                    <ControlHoliday
                        resetDay={resetDay}
                        setResetDay={setResetDay}
                        setDay={setDay}
                        setMonth={setMonth}
                        setYear={setYear}
                        day={day}
                        month={month}
                        year={year}
                    />
                    <div
                        className={cx('btn-add', 'btn-holiday', 'btn-text')}
                        onClick={() => {
                            setCheckClick(true);
                            handleNoneEdit();
                        }}
                    >
                        <div className={cx('content')}>
                            <span className={cx('text')}>Add</span>
                        </div>
                    </div>
                </div>
                <div className={cx('list-holiday')}>
                    <div className={cx('line-title')}>
                        <div className={cx('name-num', 'box-title')}>
                            <span className={cx('content')}>ID</span>
                        </div>
                        <div className={cx('name-holiday', 'box-title')}>
                            <span className={cx('content')}>Holiday</span>
                        </div>
                    </div>
                    {allDay.map((item, index) => (
                        <div key={index} className={cx('item-inner-lisst')}>
                            <div className={cx('numerical-order')}>
                                <div className={cx('content-num')}>
                                    <span className={cx('content')}>{index + page * 10 - 9}</span>
                                </div>
                            </div>
                            <div className={cx('item-holiday')}>
                                <div className={cx('content-holiday')}>
                                    <span className={cx('content')}>{item.day}</span>
                                </div>
                            </div>

                            <div className={cx('box-btn-holiday')}>
                                <div className={cx('box-input-edit', 'box-input-dn')} id={`box-btn-holiday-${item.id}`}>
                                    <ControlHoliday
                                        resetDay={resetDay}
                                        setResetDay={setResetDay}
                                        setDay={setUpdateDay}
                                        setMonth={setUpdateMonth}
                                        setYear={setUpdateYear}
                                        day={updateDay}
                                        month={updateMonth}
                                        year={updateYear}
                                    />
                                    <div
                                        className={cx('btn-sub', 'btn-holiday', 'btn-text')}
                                        onClick={() => {
                                            const newDay = handleDay(updateDay, updateMonth, updateYear);
                                            setDataItem({ id: item.id, day: newDay, account_id: item.account_id });
                                            setCheckSub(true);
                                            handleNoneEdit();
                                        }}
                                    >
                                        <div className={cx('content')}>
                                            <span className={cx('text')}>Sub</span>
                                        </div>
                                    </div>
                                </div>
                                <div
                                    id={`btn-edit-${item.id}`}
                                    className={cx('btn-edit', 'btn-holiday')}
                                    onClick={() => {
                                        handleNoneEdit();
                                        const boxInputEdit = $(`#box-btn-holiday-${item.id}`);
                                        boxInputEdit.css({
                                            display: 'flex',
                                        });
                                        if (checkBtn === item.id) {
                                            handleNoneEdit();
                                        } else {
                                            setCheckBtn(item.id);
                                        }
                                        setDataItem(item);
                                        setUpdateDay(Number(item.day.slice(0, 2)).toString());
                                        setUpdateMonth(Number(item.day.slice(3, 5)).toString());
                                        setUpdateYear(Number(item.day.slice(6, 10)).toString());
                                    }}
                                >
                                    <div className={cx('content')}>
                                        <span className={cx('text', 'text-edit')} id={`text-edit-${item.id}`}>
                                            <svg
                                                width="18"
                                                height="21"
                                                viewBox="0 0 18 21"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <path
                                                    className={cx('svg-btn', 'svg-edit', `svg-edit-${item.id}`)}
                                                    d="M14.0267 19.5969H1.47908C1.1594 19.5969 0.900024 19.3053 0.900024 18.9453V4.82918C0.900024 4.46933 1.1594 4.17773 1.47908 4.17773H7.7528C8.07266 4.17773 8.33186 4.46954 8.33186 4.82918C8.33186 5.18882 8.07248 5.48062 7.7528 5.48062H2.05832V18.2938H13.4476V11.8871C13.4476 11.5273 13.707 11.2357 14.0267 11.2357C14.3466 11.2357 14.6058 11.5275 14.6058 11.8871V18.9453C14.6059 19.3053 14.3466 19.5969 14.0267 19.5969Z"
                                                    fill="white"
                                                />
                                                <path
                                                    className={cx('svg-btn', 'svg-edit', `svg-edit-${item.id}`)}
                                                    d="M16.9306 3.62188L15.1258 1.59344C14.8999 1.3393 14.5332 1.3393 14.3073 1.59344L12.6762 3.43072L6.3713 10.5235C6.3191 10.5822 6.2768 10.6517 6.24782 10.7276L4.89854 14.274C4.80386 14.5194 4.85408 14.8039 5.02022 14.9906C5.13218 15.1166 5.27888 15.1818 5.42954 15.1818C5.50676 15.1818 5.58398 15.1644 5.65922 15.1297L8.81156 13.6118C8.87906 13.5792 8.94098 13.5314 8.993 13.4729L15.2977 6.38013L16.9308 4.54507C17.1565 4.28851 17.1565 3.87601 16.9306 3.62188ZM6.5315 13.2925L7.05854 11.9112L7.75928 12.6995L6.5315 13.2925ZM8.44652 12.2457L7.4621 11.1383L13.1413 4.74899L14.1259 5.85646L8.44652 12.2457ZM14.672 5.24188L13.6876 4.1344L14.7165 2.97692L15.7009 4.08236L14.672 5.24188Z"
                                                    fill="white"
                                                />
                                            </svg>
                                        </span>
                                    </div>
                                </div>
                                <div
                                    className={cx('btn-delete', 'btn-holiday')}
                                    onClick={() => {
                                        setDataItem(item);
                                        setCheckDelete(true);
                                        handleNoneEdit();
                                    }}
                                >
                                    <div className={cx('content')}>
                                        <span className={cx('text')}>
                                            <svg
                                                width="20"
                                                height="20"
                                                viewBox="0 0 20 20"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <path
                                                    className={cx('svg-btn', 'svg-delete', `svg-delete-${item.id}`)}
                                                    fill-rule="evenodd"
                                                    clip-rule="evenodd"
                                                    d="M9.83505 2.4942C9.82955 2.49645 8.78105 2.501 7.50505 2.5043C4.8119 2.51125 4.7371 2.51225 4.62505 2.5414C4.5093 2.57155 4.3585 2.6476 4.26505 2.72295C4.1808 2.7909 4.02535 2.95205 3.917 3.0837C3.8994 3.10505 3.8747 3.1332 3.8621 3.1462C3.84945 3.15925 3.84125 3.1699 3.8438 3.1699C3.8464 3.1699 3.8313 3.18775 3.81035 3.2096C3.7741 3.2473 3.67225 3.37015 3.56655 3.50365C3.53985 3.53735 3.5148 3.56715 3.5108 3.5699C3.5068 3.57265 3.45475 3.63565 3.3951 3.7099C3.33545 3.78415 3.26155 3.8746 3.23085 3.91095C3.20015 3.94725 3.1188 4.0458 3.05005 4.1299C2.9813 4.21405 2.9093 4.30185 2.89005 4.32505C2.8708 4.3483 2.84605 4.37995 2.83505 4.39545C2.82405 4.41095 2.80565 4.43515 2.79415 4.44925C2.763 4.4875 2.68715 4.6167 2.65585 4.6849C2.64065 4.7179 2.61985 4.7629 2.60955 4.7849C2.58345 4.84075 2.51935 5.0199 2.52545 5.0199C2.52825 5.0199 2.52385 5.03005 2.5157 5.0425C2.4996 5.0671 2.4978 15.9853 2.5139 16.1149C2.52985 16.2433 2.60075 16.4636 2.66515 16.5849C2.73995 16.7257 2.80655 16.8299 2.8217 16.8299C2.8263 16.8299 2.83005 16.8348 2.83005 16.8408C2.83005 16.8654 2.97755 17.0291 3.05455 17.0901C3.08575 17.1147 3.1256 17.1477 3.14315 17.1633C3.1607 17.1789 3.18815 17.1985 3.2041 17.2069C3.2201 17.2152 3.24215 17.2304 3.25315 17.2406C3.303 17.2871 3.62485 17.4301 3.73505 17.4547C3.74605 17.4572 3.7888 17.4683 3.83005 17.4794C3.90985 17.5009 15.2986 17.5109 15.915 17.49C16.2337 17.4792 16.34 17.4541 16.595 17.3296C16.6712 17.2924 16.83 17.1905 16.83 17.1788C16.83 17.1739 16.8361 17.1699 16.8436 17.1699C16.8629 17.1699 17.0602 16.9804 17.1307 16.8941C17.3147 16.6689 17.442 16.3922 17.4823 16.1299C17.4908 16.0742 17.4945 14.643 17.4966 10.5626L17.4995 5.07015L17.4502 4.93525C17.3975 4.7912 17.3376 4.6606 17.2914 4.58895C17.2032 4.45215 17.1506 4.3726 17.1365 4.3549C17.1277 4.3439 17.0864 4.29105 17.0446 4.2374C17.0029 4.1838 16.9648 4.1399 16.96 4.1399C16.9553 4.1399 16.9488 4.132 16.9456 4.1224C16.9425 4.1128 16.9214 4.08465 16.8989 4.0599C16.8763 4.03515 16.8415 3.99465 16.8215 3.9699C16.8014 3.94515 16.7803 3.9204 16.7745 3.9149C16.7687 3.9094 16.7447 3.8793 16.7213 3.84805C16.6978 3.8168 16.6686 3.7808 16.6564 3.76805C16.6442 3.7553 16.6187 3.72465 16.5998 3.6999C16.581 3.67515 16.5631 3.65265 16.5601 3.6499C16.557 3.64715 16.539 3.62465 16.52 3.5999C16.4821 3.55035 16.4396 3.49845 16.3369 3.37605C16.2994 3.33145 16.2544 3.2774 16.2369 3.256C15.8268 2.7553 15.5316 2.535 15.245 2.51585C15.0717 2.50425 9.8616 2.48345 9.83505 2.4942ZM14.735 3.3554C14.9527 3.3621 15.01 3.3747 15.01 3.4159C15.01 3.4202 15.027 3.43975 15.0477 3.4593C15.0684 3.4789 15.0952 3.50755 15.1072 3.52305C15.1191 3.53855 15.1933 3.61915 15.272 3.7022C15.3963 3.83335 15.4506 3.89095 15.605 4.05555C15.6215 4.07315 15.6482 4.10155 15.6644 4.1187L15.6938 4.1499H10.0014H4.30905L4.33705 4.1124C4.35245 4.0918 4.3732 4.0659 4.3832 4.0549C4.3932 4.0439 4.4202 4.0102 4.4432 3.98C4.4662 3.9498 4.4978 3.9108 4.51345 3.8933C4.52905 3.8758 4.5409 3.86 4.5398 3.8582C4.5387 3.8564 4.55655 3.83465 4.57945 3.8099C4.60235 3.78515 4.6286 3.7525 4.63775 3.7374C4.6469 3.7223 4.6579 3.7099 4.6622 3.7099C4.6665 3.7099 4.67005 3.70315 4.67005 3.6949C4.67005 3.68665 4.6738 3.6799 4.67835 3.6799C4.6829 3.6799 4.7133 3.6455 4.74585 3.6035C4.7784 3.56145 4.8176 3.51305 4.833 3.496C4.84835 3.4789 4.8821 3.4364 4.908 3.4016L4.95505 3.3383L9.76005 3.34425C12.4028 3.3475 14.6415 3.3525 14.735 3.3554ZM11.66 9.17995V10.02L13.0915 10.0198C13.8789 10.0197 14.5248 10.0213 14.5269 10.0235C14.529 10.0256 14.4786 10.0785 14.4148 10.1411C14.351 10.2037 14.2128 10.3449 14.1077 10.4549C14.0026 10.5649 13.9129 10.6538 13.9083 10.6524C13.9038 10.6511 13.9012 10.6552 13.9025 10.6616C13.9039 10.668 13.8949 10.6786 13.8826 10.685C13.8702 10.6914 13.8631 10.6997 13.8668 10.7033C13.8704 10.707 13.867 10.7104 13.8592 10.711C13.8514 10.7115 13.7663 10.7946 13.67 10.8955C13.5738 10.9964 13.4897 11.0792 13.4831 11.0794C13.4766 11.0797 13.468 11.0851 13.4641 11.0915C13.4596 11.0986 13.4613 11.1003 13.4685 11.0959C13.4873 11.0842 13.4816 11.0954 13.4583 11.1159C13.4464 11.1264 13.4399 11.1293 13.4439 11.1224C13.4607 11.0937 13.4394 11.1148 13.3697 11.196C13.3291 11.2433 13.2853 11.286 13.2723 11.2909C13.2594 11.2959 13.2516 11.3044 13.255 11.3099C13.2584 11.3154 13.2542 11.3199 13.2456 11.3199C13.237 11.3199 13.23 11.3234 13.23 11.3276C13.23 11.3413 13.0954 11.4749 13.085 11.4715C13.0795 11.4697 13.0784 11.4716 13.0825 11.4758C13.0919 11.4851 13.0616 11.5199 13.0441 11.5199C13.037 11.5199 13.028 11.5251 13.0241 11.5315C13.0193 11.5391 13.0214 11.5403 13.03 11.5349C13.0387 11.5296 13.0407 11.5307 13.036 11.5384C13.0321 11.5447 13.0232 11.5499 13.0162 11.5499C13.0093 11.5499 12.9904 11.5667 12.9743 11.5872C12.9338 11.6387 12.89 11.6844 12.89 11.6752C12.89 11.6709 12.8833 11.673 12.8751 11.6798C12.8669 11.6866 12.8629 11.6965 12.8661 11.7017C12.8694 11.707 12.8626 11.7137 12.8511 11.7167C12.8397 11.7197 12.8314 11.7251 12.8328 11.7286C12.8355 11.7355 12.7127 11.8579 12.7018 11.8592C12.6981 11.8596 12.6948 11.8656 12.6946 11.8724C12.6943 11.8793 12.6876 11.8834 12.6796 11.8816C12.6716 11.8798 12.6684 11.8816 12.6724 11.8857C12.6821 11.8953 12.6605 11.9214 12.6489 11.9142C12.644 11.9112 12.64 11.9151 12.64 11.9228C12.64 11.9451 12.5547 12.034 12.5413 12.0257C12.5348 12.0217 12.5302 12.0221 12.531 12.0267C12.5352 12.0513 12.5288 12.0616 12.5128 12.0555C12.5034 12.0518 12.4989 12.0521 12.5029 12.0561C12.512 12.0652 12.4813 12.0999 12.4641 12.0999C12.457 12.0999 12.448 12.1051 12.4441 12.1115C12.4392 12.1193 12.4414 12.1203 12.451 12.1146C12.463 12.1073 12.463 12.1086 12.4511 12.1232C12.4434 12.1327 12.4354 12.1386 12.4332 12.1364C12.431 12.1342 12.3788 12.1847 12.3171 12.2486C12.2555 12.3125 12.2017 12.3636 12.1975 12.3623C12.1934 12.361 12.1911 12.3633 12.1923 12.3674C12.1961 12.3796 12.1569 12.421 12.1325 12.4306C12.1202 12.4355 12.11 12.4463 12.11 12.4547C12.11 12.4631 12.1046 12.4699 12.0981 12.4699C12.0861 12.4699 12.0301 12.5187 12.0299 12.5293C12.0296 12.5418 11.7843 12.7847 11.775 12.7816C11.7695 12.7798 11.7684 12.7816 11.7725 12.7858C11.7829 12.7961 11.7498 12.831 11.7371 12.8231C11.7315 12.8197 11.7297 12.8213 11.7331 12.8268C11.7411 12.8398 11.6863 12.8926 11.6752 12.8826C11.6706 12.8784 11.6697 12.8799 11.6732 12.8861C11.6767 12.8922 11.6696 12.9057 11.6575 12.9161C11.6356 12.9347 11.6356 12.9347 11.6499 12.9149C11.6579 12.9039 11.618 12.9433 11.5613 13.0024C11.5046 13.0616 11.4395 13.1263 11.4166 13.1464C11.3937 13.1664 11.3818 13.1792 11.39 13.1748C11.3983 13.1704 11.392 13.1808 11.3761 13.1979C11.3602 13.215 11.3424 13.2281 11.3366 13.227C11.3307 13.2258 11.3255 13.2317 11.325 13.2399C11.3245 13.2482 11.3184 13.2537 11.3113 13.2522C11.3043 13.2507 11.3009 13.2532 11.3037 13.2578C11.3085 13.2656 11.2532 13.3247 11.2408 13.3251C11.2257 13.3255 11.2104 13.3425 11.2164 13.3522C11.2204 13.3587 11.2185 13.3601 11.2115 13.3558C11.2049 13.3518 11.1971 13.3559 11.1934 13.3655C11.1899 13.3748 11.1663 13.4009 11.141 13.4236C11.0335 13.5202 10.95 13.6042 10.95 13.6157C10.95 13.6226 10.9362 13.6398 10.9193 13.654C10.9023 13.6683 10.8918 13.6799 10.8958 13.6799C10.8998 13.6799 10.895 13.6889 10.885 13.6999C10.8751 13.7109 10.8606 13.7199 10.8529 13.7199C10.8452 13.7199 10.8409 13.7233 10.8434 13.7274C10.8459 13.7315 10.8364 13.7436 10.8223 13.7541C10.8083 13.7647 10.8004 13.7674 10.8049 13.7601C10.8104 13.7513 10.8093 13.7492 10.8016 13.754C10.7952 13.7579 10.79 13.7683 10.79 13.7772C10.79 13.786 10.7869 13.7901 10.783 13.7862C10.7749 13.7781 10.52 14.0292 10.52 14.0453C10.52 14.0623 10.4546 14.1211 10.4453 14.1126C10.4406 14.1084 10.4397 14.11 10.4433 14.1163C10.4469 14.1225 10.4431 14.1332 10.4349 14.14C10.4267 14.1468 10.42 14.1494 10.42 14.1458C10.42 14.1421 10.4137 14.1449 10.4061 14.152C10.3984 14.1591 10.3942 14.1683 10.3967 14.1724C10.3992 14.1765 10.3972 14.1799 10.3924 14.1799C10.3875 14.1799 10.2961 14.2648 10.1893 14.3685C10.0206 14.5325 9.9936 14.555 9.98295 14.541C9.9762 14.5322 9.97055 14.529 9.97035 14.5339C9.9702 14.5388 9.9596 14.5316 9.9468 14.5178C9.93405 14.504 9.91155 14.4848 9.8968 14.4752C9.87065 14.458 9.8578 14.4317 9.88255 14.4459C9.8898 14.4501 9.89155 14.4493 9.8867 14.444C9.88215 14.439 9.876 14.4349 9.87305 14.4349C9.8701 14.4349 9.812 14.3781 9.74385 14.3087C9.67575 14.2393 9.62005 14.1847 9.62005 14.1875C9.62005 14.1902 9.61335 14.1868 9.60515 14.18C9.59695 14.1732 9.5927 14.1637 9.5957 14.1589C9.59865 14.1541 9.595 14.1525 9.5875 14.1554C9.5722 14.1612 9.5164 14.1039 9.52455 14.0907C9.52745 14.086 9.522 14.0761 9.51245 14.0686C9.49635 14.056 9.4962 14.0564 9.51005 14.0745C9.5183 14.0852 9.45755 14.0252 9.37505 13.941C9.29255 13.8569 9.22355 13.784 9.2217 13.779C9.2199 13.774 9.2118 13.7699 9.20375 13.7699C9.1883 13.7699 9.03905 13.6237 9.0424 13.6118C9.04395 13.6065 8.90605 13.4692 8.76305 13.3337C8.7564 13.3274 8.75415 13.3188 8.75805 13.3145C8.7619 13.3102 8.7595 13.3099 8.7527 13.3138C8.7361 13.3234 8.5959 13.1848 8.60585 13.1687C8.6101 13.1618 8.60885 13.1595 8.60295 13.1631C8.5973 13.1666 8.58425 13.1598 8.5739 13.148C8.56355 13.1362 8.5609 13.1299 8.568 13.1341C8.5751 13.1382 8.53755 13.0996 8.48455 13.0483C8.43155 12.9969 8.38175 12.9513 8.3739 12.9468C8.36605 12.9423 8.3623 12.9344 8.3656 12.9291C8.36885 12.9238 8.3656 12.9207 8.3583 12.9222C8.351 12.9237 8.3463 12.919 8.3478 12.9117C8.34935 12.9043 8.3457 12.9014 8.3396 12.9052C8.3245 12.9145 8.2264 12.8139 8.2358 12.7987C8.24005 12.7919 8.2389 12.7895 8.2331 12.793C8.22495 12.7981 8.17715 12.7559 8.18135 12.7474C8.182 12.746 8.1066 12.6709 8.0138 12.5804C7.80775 12.3796 7.82095 12.3929 7.84505 12.4104C7.86355 12.4238 7.864 12.4236 7.85135 12.4074C7.8438 12.3978 7.8323 12.3899 7.8258 12.3899C7.81085 12.3899 7.75515 12.3311 7.74625 12.306C7.7426 12.2956 7.73735 12.2893 7.7346 12.292C7.73 12.2966 7.5973 12.1645 7.5542 12.1124C7.544 12.1001 7.52985 12.0899 7.52285 12.0899C7.5158 12.0899 7.51005 12.0834 7.51005 12.0755C7.51005 12.0676 7.50485 12.0579 7.4985 12.054C7.4907 12.0491 7.48965 12.0514 7.4953 12.0609C7.4999 12.0686 7.48825 12.06 7.46935 12.0418C7.4505 12.0236 7.43505 12.0034 7.43505 11.9968C7.43505 11.9903 7.43055 11.9849 7.42505 11.9848C7.40895 11.9846 7.3602 11.9377 7.36615 11.9282C7.3691 11.9234 7.36785 11.9206 7.3633 11.922C7.35425 11.9249 6.98045 11.5496 6.9802 11.5374C6.9801 11.5333 6.97305 11.5299 6.96445 11.5299C6.9559 11.5299 6.95165 11.5254 6.95505 11.5199C6.95845 11.5144 6.95465 11.5099 6.9466 11.5099C6.9385 11.5099 6.8959 11.4698 6.85185 11.4207C6.8078 11.3717 6.76985 11.3334 6.7675 11.3358C6.7652 11.3381 6.75465 11.33 6.74415 11.3177C6.72525 11.2955 6.72525 11.2954 6.74505 11.3101C6.76355 11.3238 6.76405 11.3236 6.75135 11.3074C6.7438 11.2978 6.7322 11.2899 6.72555 11.2899C6.7131 11.2899 6.6679 11.2467 6.67245 11.2392C6.6739 11.2368 6.6486 11.2085 6.61625 11.1763C6.5839 11.144 6.5611 11.1235 6.56555 11.1307C6.57835 11.1515 6.5121 11.1012 6.49565 11.0777C6.48755 11.0662 6.48365 11.0522 6.487 11.0468C6.49045 11.0412 6.48805 11.04 6.4815 11.044C6.47515 11.048 6.4676 11.0453 6.4648 11.0381C6.46195 11.0308 6.2369 10.8004 5.96465 10.526C5.6924 10.2515 5.47125 10.0254 5.4732 10.0234C5.4752 10.0215 6.121 10.0199 6.9084 10.0199H8.34005V9.17985V8.3399H10H11.66V9.17995Z"
                                                    fill="white"
                                                />
                                                <path
                                                    className={cx('svg-btn', 'svg-delete', `svg-delete-${item.id}`)}
                                                    fill-rule="evenodd"
                                                    clip-rule="evenodd"
                                                    d="M6.35258 2.50704C6.37323 2.50919 6.40698 2.50919 6.42758 2.50704C6.44823 2.50489 6.43133 2.50309 6.39008 2.50309C6.34883 2.50309 6.33198 2.50489 6.35258 2.50704ZM14.5076 2.50679C14.5199 2.50919 14.5402 2.50919 14.5526 2.50679C14.565 2.50439 14.5548 2.50244 14.5301 2.50244C14.5053 2.50244 14.4952 2.50439 14.5076 2.50679ZM12.7376 3.34719C12.794 3.34899 12.8862 3.34899 12.9426 3.34719C12.999 3.34544 12.9528 3.34394 12.8401 3.34394C12.7273 3.34394 12.6812 3.34544 12.7376 3.34719ZM2.50293 5.11474C2.50303 5.14224 2.50498 5.15229 2.50728 5.13709C2.50953 5.12189 2.50948 5.09939 2.50713 5.08709C2.50473 5.07479 2.50288 5.08724 2.50293 5.11474ZM17.4928 5.15974C17.4928 5.18449 17.4947 5.19459 17.4971 5.18224C17.4995 5.16989 17.4995 5.14964 17.4971 5.13724C17.4947 5.12489 17.4928 5.13499 17.4928 5.15974ZM5.64008 10.2047C5.66993 10.235 5.69663 10.2597 5.69938 10.2597C5.70213 10.2597 5.67993 10.235 5.65008 10.2047C5.62023 10.1745 5.59353 10.1497 5.59078 10.1497C5.58803 10.1497 5.61023 10.1745 5.64008 10.2047ZM5.89508 10.4597C5.92773 10.4927 5.95668 10.5197 5.95943 10.5197C5.96218 10.5197 5.93773 10.4927 5.90508 10.4597C5.87243 10.4267 5.84348 10.3997 5.84073 10.3997C5.83798 10.3997 5.86243 10.4267 5.89508 10.4597ZM13.9108 10.6451C13.887 10.6696 13.8717 10.6897 13.8768 10.6897C13.889 10.6897 13.9651 10.6115 13.9589 10.6053C13.9563 10.6026 13.9346 10.6205 13.9108 10.6451ZM13.5104 11.0461C13.4914 11.0646 13.4803 11.0797 13.486 11.0797C13.4916 11.0797 13.5114 11.064 13.5301 11.0447C13.5733 11.0001 13.5565 11.0013 13.5104 11.0461ZM6.46008 11.0238C6.46008 11.0375 6.51303 11.1005 6.54153 11.1208C6.58448 11.1513 6.57618 11.1365 6.51508 11.0734C6.48483 11.0422 6.46008 11.0199 6.46008 11.0238ZM13.2985 11.2597C13.2812 11.2762 13.2714 11.2897 13.2767 11.2897C13.282 11.2897 13.2993 11.2762 13.3151 11.2597C13.3309 11.2432 13.3407 11.2297 13.3369 11.2297C13.333 11.2297 13.3158 11.2432 13.2985 11.2597ZM6.69008 11.2647C6.70298 11.2785 6.71723 11.2897 6.72178 11.2897C6.72628 11.2897 6.72018 11.2785 6.70823 11.2647C6.69628 11.251 6.68198 11.2397 6.67653 11.2397C6.67108 11.2397 6.67718 11.251 6.69008 11.2647ZM6.86008 11.4271C6.86008 11.4393 6.93868 11.5145 6.94493 11.5082C6.94778 11.5054 6.92988 11.484 6.90508 11.4608C6.88033 11.4376 6.86008 11.4225 6.86008 11.4271ZM13.0771 11.4802C13.0566 11.5019 13.0435 11.5197 13.048 11.5197C13.0593 11.5197 13.1248 11.4511 13.119 11.4453C13.1164 11.4427 13.0976 11.4584 13.0771 11.4802ZM12.9118 11.6429C12.8808 11.6758 12.8849 11.6854 12.9171 11.6555C12.932 11.6417 12.9417 11.628 12.9388 11.6251C12.9359 11.6222 12.9237 11.6302 12.9118 11.6429ZM7.35648 11.9293C7.45388 12.0295 7.50663 12.0791 7.49528 12.0597C7.48218 12.0373 7.29633 11.8499 7.28713 11.8498C7.28278 11.8498 7.31398 11.8855 7.35648 11.9293ZM12.6659 11.8903C12.6553 11.9009 12.6489 11.9119 12.6517 11.9146C12.6544 11.9174 12.6672 11.9084 12.6801 11.8947C12.7074 11.8656 12.6944 11.8616 12.6659 11.8903ZM12.5473 12.0097C12.4991 12.0592 12.4636 12.0997 12.4684 12.0997C12.4813 12.0997 12.6401 11.9432 12.6401 11.9305C12.6401 11.9142 12.6409 11.9135 12.5473 12.0097ZM7.75008 12.3189C7.75008 12.3284 7.81893 12.3944 7.82323 12.389C7.82513 12.3867 7.80948 12.3684 7.78838 12.3484C7.76733 12.3284 7.75008 12.3152 7.75008 12.3189ZM12.1745 12.3847C12.1494 12.4095 12.1325 12.4296 12.137 12.4295C12.1469 12.4293 12.2368 12.3397 12.2271 12.3397C12.2233 12.3397 12.1997 12.36 12.1745 12.3847ZM7.84728 12.4205C7.85953 12.4332 7.87203 12.4411 7.87513 12.438C7.87818 12.4349 7.86818 12.4245 7.85288 12.4149L7.82508 12.3973L7.84728 12.4205ZM11.7447 12.8128C11.6273 12.9335 11.6211 12.9498 11.7353 12.8376C11.7897 12.7842 11.832 12.7383 11.8293 12.7356C11.8267 12.733 11.7886 12.7677 11.7447 12.8128ZM8.20178 12.7772C8.25678 12.8391 8.36263 12.9404 8.38458 12.9521C8.39583 12.958 8.35518 12.9127 8.29423 12.8513C8.18693 12.7433 8.13378 12.7007 8.20178 12.7772ZM8.61333 13.1922C8.64353 13.2266 8.68738 13.2705 8.71083 13.2897C8.73423 13.309 8.76248 13.3349 8.77353 13.3472C8.78463 13.3596 8.79818 13.3697 8.80368 13.3697C8.80918 13.3697 8.75933 13.3157 8.69293 13.2497C8.56108 13.1187 8.52713 13.0942 8.61333 13.1922ZM11.3132 13.245C11.2714 13.2864 11.239 13.322 11.2413 13.3242C11.2435 13.3264 11.2812 13.2926 11.3252 13.249C11.3691 13.2054 11.4015 13.1697 11.3971 13.1697C11.3928 13.1697 11.355 13.2036 11.3132 13.245ZM9.06048 13.6372C9.10293 13.686 9.19253 13.7697 9.20233 13.7697C9.20758 13.7697 9.17658 13.7338 9.13348 13.6898C9.05933 13.6142 9.00893 13.5779 9.06048 13.6372ZM10.8718 13.6837C10.7989 13.7588 10.7807 13.7852 10.824 13.7527C10.8372 13.7428 10.846 13.7313 10.8435 13.7272C10.8409 13.7231 10.8452 13.7197 10.8529 13.7197C10.8607 13.7197 10.8751 13.7107 10.8851 13.6997C10.895 13.6887 10.9002 13.6797 10.8965 13.6797C10.8928 13.6797 10.9045 13.6666 10.9224 13.6506C10.9404 13.6345 10.9524 13.6188 10.9492 13.6156C10.946 13.6124 10.9112 13.643 10.8718 13.6837ZM9.49263 14.0669C9.53193 14.1145 9.61253 14.1906 9.61788 14.1853C9.62293 14.1802 9.48518 14.0397 9.47523 14.0397C9.47248 14.0397 9.48033 14.052 9.49263 14.0669ZM10.4656 14.0902C10.4391 14.1178 10.4194 14.1424 10.4219 14.1449C10.4243 14.1473 10.4482 14.127 10.4751 14.0997C10.5019 14.0725 10.5216 14.0479 10.5188 14.0451C10.516 14.0423 10.492 14.0626 10.4656 14.0902ZM10.3097 14.2472L10.2551 14.3047L10.3126 14.2501C10.3442 14.22 10.3701 14.1941 10.3701 14.1926C10.3701 14.1851 10.3605 14.1938 10.3097 14.2472ZM9.86928 14.4482C9.87558 14.46 9.88443 14.4697 9.88888 14.4697C9.89338 14.4697 9.91343 14.4857 9.93353 14.5052C9.95363 14.5247 9.97008 14.5378 9.97008 14.5343C9.97008 14.5244 9.91833 14.4708 9.88643 14.4476L9.85778 14.4267L9.86928 14.4482ZM15.6226 17.4966C15.6322 17.4991 15.6479 17.4991 15.6576 17.4966C15.6672 17.4941 15.6593 17.492 15.6401 17.492C15.6208 17.492 15.6129 17.4941 15.6226 17.4966Z"
                                                    fill="white"
                                                />
                                            </svg>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
                {totalPage > 1 ? (
                    <div className={cx('pagination')}>
                        <Pagination totalPages={totalPage} setPage={setPage} />
                    </div>
                ) : undefined}
            </div>
        </div>
    );
}

export default Holiday;
